directive @auth on FIELD_DEFINITION
directive @videoValid on FIELD_DEFINITION
directive @videoDeleteValid on FIELD_DEFINITION
directive @videoUpdateValid on FIELD_DEFINITION
directive @getVideoValid on FIELD_DEFINITION
scalar Upload
input createVideoInput {
  title: String
  description: String
}
type videoRes {
  video_uuid: String
  url: String
  created_at: String
  updated_at: String
  type: String
  title: String
  description: String
}
type createVideoResponse {
  status_code: Int
  message: String
  data: videoRes
}
type deleteVideoResponse {
  status_code: Int
  message: String
}
input updateVideoInput {
  title: String
  description: String
  video_id: String
}
type video_view {
  video_view: Int
}

type VideoViewResponse {
  status_code: Int
  message: String
  data: video_view
}
input getVideoReq {
  page: Int
  limit: Int
  sort: String
  search: String
  type: String
  title: String
  video_uuid: String
}
type User_Video {
  email: String
  phone: String
  user_uuid: String
  first_name: String
  last_name: String
}
type Video_Avtar {
  avtar_url: String
  image_uuid: String
}
type Channel_Video {
  discription: String
  handle: String
  channel_name: String
  chanel_uuid: String
  Avtar: Video_Avtar
}
type video_data {
  video_uuid: String
  video_url: String
  description: String
  type: String
  duration: Int
  title: String
  public_id: String
  video_view: Int
  created_at: String
  User_Video: User_Video
  Channel_Video: Channel_Video
}

type getVideoRes {
  status_code: Int
  message: String
  data: [video_data]
}

type Mutation {
  createVideo(input: createVideoInput, video_url: Upload!): createVideoResponse @auth @videoValid
  deleteVideo(video_id: String!): deleteVideoResponse @auth @videoDeleteValid
  updateVideo(input: updateVideoInput): createVideoResponse @auth @videoUpdateValid
  update_video_view(video_id: String!): VideoViewResponse @auth @videoDeleteValid
}

type Query {
  getVideo(input: getVideoReq): getVideoRes @auth @getVideoValid
}
